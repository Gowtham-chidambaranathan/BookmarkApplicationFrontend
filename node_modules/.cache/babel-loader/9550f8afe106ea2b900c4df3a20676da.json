{"ast":null,"code":"var _jsxFileName = \"/Users/rchowdary/rgs/src/components/Dropdown/Dropdown.js\";\nimport React from \"react\";\nimport \"./Dropdown.css\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      selectedCat: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/category/all\").then(response => {\n      this.setState({\n        categories: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          _this$state$categorie = _this$state.categories,\n          categories = _this$state$categorie === void 0 ? [] : _this$state$categorie,\n          fetchurls = _this$state.fetchurls,\n          selectedCat = _this$state.selectedCat;\n    const _this$props = this.props,\n          fetchUrlsBasedonCatId = _this$props.fetchUrlsBasedonCatId,\n          categoryId = _this$props.categoryId;\n    return React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: e => {\n        this.setState({\n          selectedCat: e.target.value\n        });\n        console.log(categoryId); // use a flag to call api to fetch urls based on cat id\n\n        if (fetchurls) {\n          fetchUrlsBasedonCatId(categoryId);\n        }\n      },\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Select Category\"), categories.map((category, i) => {\n      return React.createElement(\"option\", {\n        value: category.categoryId,\n        key: category.categoryId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, category.categoryName);\n    })));\n  }\n\n}\n\nexport default withRouter(Dropdown);","map":{"version":3,"sources":["/Users/rchowdary/rgs/src/components/Dropdown/Dropdown.js"],"names":["React","axios","withRouter","Dropdown","Component","constructor","props","state","categories","selectedCat","componentDidMount","get","then","response","setState","data","catch","error","console","log","render","fetchurls","fetchUrlsBasedonCatId","categoryId","e","target","value","map","category","i","categoryName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,KAAK,CACFU,GADH,CACO,mBADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AAAEN,QAAAA,UAAU,EAAEK,QAAQ,CAACE;AAAvB,OAAd;AACD,KAJH,EAKGC,KALH,CAKSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPH;AAQD;;AAEDG,EAAAA,MAAM,GAAG;AAAA,wBAC6C,KAAKb,KADlD;AAAA,8CACCC,UADD;AAAA,UACCA,UADD,sCACc,EADd;AAAA,UACkBa,SADlB,eACkBA,SADlB;AAAA,UAC6BZ,WAD7B,eAC6BA,WAD7B;AAAA,wBAEuC,KAAKH,KAF5C;AAAA,UAECgB,qBAFD,eAECA,qBAFD;AAAA,UAEwBC,UAFxB,eAEwBA,UAFxB;AAIP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,QAAQ,EAAEC,CAAC,IAAI;AACb,aAAKV,QAAL,CAAc;AACZL,UAAAA,WAAW,EAAEe,CAAC,CAACC,MAAF,CAASC;AADV,SAAd;AAGAR,QAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ,EAJa,CAKb;;AACA,YAAIF,SAAJ,EAAe;AACbC,UAAAA,qBAAqB,CAACC,UAAD,CAArB;AACD;AACF,OAVH;AAWE,MAAA,SAAS,EAAC,KAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAbF,EAcGf,UAAU,CAACmB,GAAX,CAAe,CAACC,QAAD,EAAWC,CAAX,KAAiB;AAC/B,aACE;AAAQ,QAAA,KAAK,EAAED,QAAQ,CAACL,UAAxB;AAAoC,QAAA,GAAG,EAAEK,QAAQ,CAACL,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGK,QAAQ,CAACE,YADZ,CADF;AAKD,KANA,CAdH,CADF,CADF;AA0BD;;AAjDoC;;AAmDvC,eAAe5B,UAAU,CAACC,QAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport \"./Dropdown.css\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      selectedCat: \"\"\n    };\n  }\n  componentDidMount() {\n    axios\n      .get(\"/api/category/all\")\n      .then(response => {\n        this.setState({ categories: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const { categories = [], fetchurls, selectedCat } = this.state;\n    const { fetchUrlsBasedonCatId, categoryId } = this.props;\n\n    return (\n      <nav>\n        <select\n          onChange={e => {\n            this.setState({\n              selectedCat: e.target.value\n            });\n            console.log(categoryId);\n            // use a flag to call api to fetch urls based on cat id\n            if (fetchurls) {\n              fetchUrlsBasedonCatId(categoryId);\n            }\n          }}\n          className=\"box\"\n        >\n          <option>Select Category</option>\n          {categories.map((category, i) => {\n            return (\n              <option value={category.categoryId} key={category.categoryId}>\n                {category.categoryName}\n              </option>\n            );\n          })}\n        </select>\n      </nav>\n    );\n  }\n}\nexport default withRouter(Dropdown);\n"]},"metadata":{},"sourceType":"module"}