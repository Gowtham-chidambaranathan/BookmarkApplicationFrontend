{"ast":null,"code":"var _jsxFileName = \"/Users/rchowdary/rgs/src/Category/components/CreateCategory.js\";\nimport React from \"react\";\nimport TextArea from \"../../common/Textarea\";\nimport TextField from \"../../common/TextField\";\nimport { Button } from \"react-bootstrap\";\nimport { CategoryFormStyled } from \"./Category.styled\";\nexport default class CreateCategory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let urlError = \"\";\n      let descError = \"\";\n\n      if (!this.state.categoryDescription.length) {\n        descError = \"Description cannot be blank!\";\n      }\n\n      if (!this.state.categoryName.length) {\n        urlError = \"Category cannot be blank!\";\n      }\n\n      if (urlError || descError) {\n        this.setState({\n          urlError,\n          descError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        axios.post(\"/api/category/create\", this.state).then(response => {\n          console.log(response);\n        }).catch(error => {\n          console.log(error);\n        });\n        console.log(this.state);\n      } else {\n        alert(\"Cannot be created\");\n      }\n    };\n\n    this.state = {\n      categoryName: \"\",\n      categoryDesc: \"\",\n      urlError: \"\",\n      descError: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(CategoryFormStyled, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onChange: this.changeHandler,\n      label: \"Category Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      placeholder: \"Enter the description\",\n      handleChange: e => {\n        this.setState({\n          categoryDesc: e.target.value\n        });\n      },\n      label: \"Category Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/rchowdary/rgs/src/Category/components/CreateCategory.js"],"names":["React","TextArea","TextField","Button","CategoryFormStyled","CreateCategory","Component","constructor","props","validate","urlError","descError","state","categoryDescription","length","categoryName","setState","submitHandler","e","preventDefault","isValid","axios","post","then","response","console","log","catch","error","alert","categoryDesc","render","changeHandler","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AAEA,eAAe,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,QATmB,GASR,MAAM;AACf,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,UAAI,CAAC,KAAKC,KAAL,CAAWC,mBAAX,CAA+BC,MAApC,EAA4C;AAC1CH,QAAAA,SAAS,GAAG,8BAAZ;AACD;;AACD,UAAI,CAAC,KAAKC,KAAL,CAAWG,YAAX,CAAwBD,MAA7B,EAAqC;AACnCJ,QAAAA,QAAQ,GAAG,2BAAX;AACD;;AACD,UAAIA,QAAQ,IAAIC,SAAhB,EAA2B;AACzB,aAAKK,QAAL,CAAc;AAAEN,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,SAAd;AACA,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KAvBkB;;AAAA,SAwBnBM,aAxBmB,GAwBHC,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,OAAO,GAAG,KAAKX,QAAL,EAAhB;;AACA,UAAIW,OAAJ,EAAa;AACXC,QAAAA,KAAK,CACFC,IADH,CACQ,sBADR,EACgC,KAAKV,KADrC,EAEGW,IAFH,CAEQC,QAAQ,IAAI;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,SAJH,EAKGG,KALH,CAKSC,KAAK,IAAI;AACdH,UAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,SAPH;AAQAH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AACD,OAVD,MAUO;AACLiB,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;AACF,KAxCkB;;AAEjB,SAAKjB,KAAL,GAAa;AACXG,MAAAA,YAAY,EAAE,EADH;AAEXe,MAAAA,YAAY,EAAE,EAFH;AAGXpB,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb;AAMD;;AAiCDoB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKd,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKe,aAA1B;AAAyC,MAAA,KAAK,EAAC,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,QAAD;AACE,MAAA,WAAW,EAAC,uBADd;AAEE,MAAA,YAAY,EAAEd,CAAC,IAAI;AACjB,aAAKF,QAAL,CAAc;AAAEc,UAAAA,YAAY,EAAEZ,CAAC,CAACe,MAAF,CAASC;AAAzB,SAAd;AACD,OAJH;AAKE,MAAA,KAAK,EAAC,sBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAUE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,CADF,CADF;AAgBD;;AA3DyD","sourcesContent":["import React from \"react\";\nimport TextArea from \"../../common/Textarea\";\nimport TextField from \"../../common/TextField\";\nimport { Button } from \"react-bootstrap\";\nimport { CategoryFormStyled } from \"./Category.styled\";\n\nexport default class CreateCategory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryName: \"\",\n      categoryDesc: \"\",\n      urlError: \"\",\n      descError: \"\"\n    };\n  }\n  validate = () => {\n    let urlError = \"\";\n    let descError = \"\";\n    if (!this.state.categoryDescription.length) {\n      descError = \"Description cannot be blank!\";\n    }\n    if (!this.state.categoryName.length) {\n      urlError = \"Category cannot be blank!\";\n    }\n    if (urlError || descError) {\n      this.setState({ urlError, descError });\n      return false;\n    }\n    return true;\n  };\n  submitHandler = e => {\n    e.preventDefault();\n    const isValid = this.validate();\n    if (isValid) {\n      axios\n        .post(\"/api/category/create\", this.state)\n        .then(response => {\n          console.log(response);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      console.log(this.state);\n    } else {\n      alert(\"Cannot be created\");\n    }\n  };\n  render() {\n    return (\n      <CategoryFormStyled>\n        <form onSubmit={this.submitHandler}>\n          <TextField onChange={this.changeHandler} label=\"Category Name\" />\n          <TextArea\n            placeholder=\"Enter the description\"\n            handleChange={e => {\n              this.setState({ categoryDesc: e.target.value });\n            }}\n            label=\"Category Description\"\n          />\n\n          <Button type=\"submit\">Submit</Button>\n        </form>\n      </CategoryFormStyled>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}