{"ast":null,"code":"var _jsxFileName = \"/Users/rchowdary/rgs/src/Bookmark/components/BookmarkList.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\n\nclass BookmarkList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchUrlsBasedonCatId = categoryId => {\n      axios.get(`/api/category/getUrls/${categoryId}`).then(response => {\n        this.setState({\n          urllist: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleCatChange = e => {\n      this.setState({\n        selectedCat: e.target.value\n      });\n    };\n\n    this.componentDidMount = () => {\n      const params = this.props.match.params;\n      Axios.get(\"/api/categories/list\").then(response => {\n        this.setState({\n          categories: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n      this.fetchUrlsBasedonCatId(params.cat_id);\n    };\n\n    this.state = {\n      urllist: [],\n      categories: [],\n      selectedCat: \"\"\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          urllist = _this$state.urllist,\n          _this$state$categorie = _this$state.categories,\n          categories = _this$state$categorie === void 0 ? [] : _this$state$categorie,\n          selectedCat = _this$state.selectedCat;\n    return React.createElement(\"form\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"List of URLs\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      handleChange: this.handleCatChange,\n      categories: categories,\n      fetchUrlsBasedonCatId: this.fetchUrlsBasedonCatId,\n      categoryId: selectedCat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, urllist.map(u => {\n      return React.createElement(\"li\", {\n        key: u.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, u.urlName, \" \", React.createElement(\"button\", {\n        className: \"b1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"button\", {\n        className: \"b2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Update\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nexport default withRouter(BookmarkList);","map":{"version":3,"sources":["/Users/rchowdary/rgs/src/Bookmark/components/BookmarkList.js"],"names":["React","Component","Dropdown","BookmarkList","constructor","props","fetchUrlsBasedonCatId","categoryId","axios","get","then","response","setState","urllist","data","catch","error","console","log","handleCatChange","e","selectedCat","target","value","componentDidMount","params","match","Axios","categories","cat_id","state","render","map","u","id","urlName","withRouter"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\n\nclass BookmarkList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      urllist: [],\n      categories: [],\n      selectedCat: \"\"\n    };\n  }\n  fetchUrlsBasedonCatId = categoryId => {\n    axios\n      .get(`/api/category/getUrls/${categoryId}`)\n      .then(response => {\n        this.setState({ urllist: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n  handleCatChange = e => {\n    this.setState({\n      selectedCat: e.target.value\n    });\n  };\n  componentDidMount = () => {\n    const {\n      match: { params }\n    } = this.props;\n    Axios.get(\"/api/categories/list\")\n      .then(response => {\n        this.setState({ categories: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    this.fetchUrlsBasedonCatId(params.cat_id);\n  };\n  render() {\n    const { urllist, categories = [], selectedCat } = this.state;\n    return (\n      <form className=\"form\">\n        <div>\n          <h1>List of URLs</h1>\n        </div>\n        <div>\n          <Dropdown\n            handleChange={this.handleCatChange}\n            categories={categories}\n            fetchUrlsBasedonCatId={this.fetchUrlsBasedonCatId}\n            categoryId={selectedCat}\n          />\n        </div>\n\n        <div>\n          {urllist.map(u => {\n            return (\n              <li key={u.id}>\n                {u.urlName} <button className=\"b1\">Delete</button>\n                <button className=\"b2\">Update</button>\n                <hr />\n              </li>\n            );\n          })}\n        </div>\n      </form>\n    );\n  }\n}\nexport default withRouter(BookmarkList);\n"]},"metadata":{},"sourceType":"module"}