{"ast":null,"code":"var _jsxFileName = \"/Users/rchowdary/rgs/src/components/Dropdown/Dropdown.js\";\nimport React from \"react\";\nimport \"./Dropdown.css\";\nimport { withRouter } from \"react-router-dom\";\nimport UrlList from \"./SecondPage/UrlList\";\n\nclass Dropdown extends React.Component {\n  render() {\n    const _this$props = this.props,\n          fetchUrlsBasedonCatId = _this$props.fetchUrlsBasedonCatId,\n          handleChange = _this$props.handleChange,\n          categoryId = _this$props.categoryId,\n          fetchurls = _this$props.fetchurls,\n          _this$props$categorie = _this$props.categories,\n          categories = _this$props$categorie === void 0 ? [] : _this$props$categorie,\n          history = _this$props.history;\n    return React.createElement(UrlList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: e => {\n        handleChange(e); // use a flag to call api to fetch urls based on cat id\n\n        if (fetchurls) {\n          fetchUrlsBasedonCatId(categoryId);\n          history.push(`/urls/${categoryId}`);\n        }\n      },\n      className: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Select Category\"), categories.map((category, i) => {\n      return React.createElement(\"option\", {\n        value: category.categoryId,\n        key: category.categoryId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, category.categoryName);\n    })));\n  }\n\n}\n\nexport default withRouter(Dropdown);","map":{"version":3,"sources":["/Users/rchowdary/rgs/src/components/Dropdown/Dropdown.js"],"names":["React","withRouter","UrlList","Dropdown","Component","render","props","fetchUrlsBasedonCatId","handleChange","categoryId","fetchurls","categories","history","e","push","map","category","i","categoryName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACrCC,EAAAA,MAAM,GAAG;AAAA,wBAQH,KAAKC,KARF;AAAA,UAELC,qBAFK,eAELA,qBAFK;AAAA,UAGLC,YAHK,eAGLA,YAHK;AAAA,UAILC,UAJK,eAILA,UAJK;AAAA,UAKLC,SALK,eAKLA,SALK;AAAA,8CAMLC,UANK;AAAA,UAMLA,UANK,sCAMQ,EANR;AAAA,UAOLC,OAPK,eAOLA,OAPK;AASP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,QAAQ,EAAEC,CAAC,IAAI;AACbL,QAAAA,YAAY,CAACK,CAAD,CAAZ,CADa,CAEb;;AACA,YAAIH,SAAJ,EAAe;AACbH,UAAAA,qBAAqB,CAACE,UAAD,CAArB;AACAG,UAAAA,OAAO,CAACE,IAAR,CAAc,SAAQL,UAAW,EAAjC;AACD;AACF,OARH;AASE,MAAA,SAAS,EAAC,KATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXF,EAYGE,UAAU,CAACI,GAAX,CAAe,CAACC,QAAD,EAAWC,CAAX,KAAiB;AAC/B,aACE;AAAQ,QAAA,KAAK,EAAED,QAAQ,CAACP,UAAxB;AAAoC,QAAA,GAAG,EAAEO,QAAQ,CAACP,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGO,QAAQ,CAACE,YADZ,CADF;AAKD,KANA,CAZH,CADF,CADF;AAwBD;;AAlCoC;;AAoCvC,eAAejB,UAAU,CAACE,QAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport \"./Dropdown.css\";\nimport { withRouter } from \"react-router-dom\";\nimport UrlList from \"./SecondPage/UrlList\";\n\nclass Dropdown extends React.Component {\n  render() {\n    const {\n      fetchUrlsBasedonCatId,\n      handleChange,\n      categoryId,\n      fetchurls,\n      categories = [],\n      history\n    } = this.props;\n    return (\n      <UrlList>\n        <select\n          onChange={e => {\n            handleChange(e);\n            // use a flag to call api to fetch urls based on cat id\n            if (fetchurls) {\n              fetchUrlsBasedonCatId(categoryId);\n              history.push(`/urls/${categoryId}`);\n            }\n          }}\n          className=\"box\"\n        >\n          <option>Select Category</option>\n          {categories.map((category, i) => {\n            return (\n              <option value={category.categoryId} key={category.categoryId}>\n                {category.categoryName}\n              </option>\n            );\n          })}\n        </select>\n      </UrlList>\n    );\n  }\n}\nexport default withRouter(Dropdown);\n"]},"metadata":{},"sourceType":"module"}