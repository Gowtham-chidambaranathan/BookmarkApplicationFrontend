{"ast":null,"code":"var _jsxFileName = \"/Users/rchowdary/rgs/src/Bookmark/components/BookmarkList.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport Axios from \"axios\";\nimport { withRouter } from \"react-router-dom\"; //import { DropdownStyled } from \"../../common/Dropdown/Dropdown.styled\";\n\nimport { ButtonStyled } from \"../../common/Button/Button.styled\";\nimport Dropdown from \"../../common/Dropdown\";\n\nclass BookmarkList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchUrlsBasedonCatId = categoryId => {\n      Axios.get(`/api/categories/${categoryId}/urls/`).then(response => {\n        this.setState({\n          urllist: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.componentDidMount = () => {\n      const params = this.props.match.params;\n      Axios.get(\"/api/categories/list\").then(response => {\n        this.setState({\n          categories: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n      this.fetchUrlsBasedonCatId(params.cat_id);\n    };\n\n    this.state = {\n      urllist: [],\n      categories: [],\n      selectedCat: \"\"\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          urllist = _this$state.urllist,\n          _this$state$categorie = _this$state.categories,\n          categories = _this$state$categorie === void 0 ? [] : _this$state$categorie,\n          selectedCat = _this$state.selectedCat;\n    return React.createElement(\"form\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"List of URLs\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      handleChange: e => {\n        this.setState({\n          selectedCat: e.target.value\n        });\n      },\n      options: this.state.categories.map(cat => ({\n        value: cat.categoryId,\n        text: cat.categoryName\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, urllist.map(u => {\n      return React.createElement(\"li\", {\n        key: u.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, u.urlName, React.createElement(ButtonStyled, {\n        type: \"button\",\n        buttonStyle: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(ButtonStyled, {\n        buttonStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Update\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nexport default withRouter(BookmarkList);","map":{"version":3,"sources":["/Users/rchowdary/rgs/src/Bookmark/components/BookmarkList.js"],"names":["React","Component","Axios","withRouter","ButtonStyled","Dropdown","BookmarkList","constructor","props","fetchUrlsBasedonCatId","categoryId","get","then","response","setState","urllist","data","catch","error","console","log","componentDidMount","params","match","categories","cat_id","state","selectedCat","render","e","target","value","map","cat","text","categoryName","u","id","urlName"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\nimport Axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n//import { DropdownStyled } from \"../../common/Dropdown/Dropdown.styled\";\nimport { ButtonStyled } from \"../../common/Button/Button.styled\";\nimport Dropdown from \"../../common/Dropdown\";\n\nclass BookmarkList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      urllist: [],\n      categories: [],\n      selectedCat: \"\"\n    };\n  }\n  fetchUrlsBasedonCatId = categoryId => {\n    Axios.get(`/api/categories/${categoryId}/urls/`)\n      .then(response => {\n        this.setState({ urllist: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  componentDidMount = () => {\n    const {\n      match: { params }\n    } = this.props;\n    Axios.get(\"/api/categories/list\")\n      .then(response => {\n        this.setState({ categories: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    this.fetchUrlsBasedonCatId(params.cat_id);\n  };\n  render() {\n    const { urllist, categories = [], selectedCat } = this.state;\n    return (\n      <form className=\"form\">\n        <div>\n          <h1>List of URLs</h1>\n        </div>\n        <div>\n          {/* <DropdownStyled>\n\n            categories={categories}\n            fetchUrlsBasedonCatId={this.fetchUrlsBasedonCatId}\n            categoryId={selectedCat}\n          </DropdownStyled> */}\n          <Dropdown\n            handleChange={e => {\n              this.setState({ selectedCat: e.target.value });\n            }}\n            options={this.state.categories.map(cat => ({\n              value: cat.categoryId,\n              text: cat.categoryName\n            }))}\n          />\n        </div>\n\n        <div>\n          {urllist.map(u => {\n            return (\n              <li key={u.id}>\n                {u.urlName}\n                <ButtonStyled type=\"button\" buttonStyle={\"danger\"}>\n                  Delete\n                </ButtonStyled>\n                <ButtonStyled buttonStyle={\"primary\"}>Update</ButtonStyled>\n                <hr />\n              </li>\n            );\n          })}\n        </div>\n      </form>\n    );\n  }\n}\nexport default withRouter(BookmarkList);\n"]},"metadata":{},"sourceType":"module"}