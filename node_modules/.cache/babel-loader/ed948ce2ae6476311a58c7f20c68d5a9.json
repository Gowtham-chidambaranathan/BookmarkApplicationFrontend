{"ast":null,"code":"var _jsxFileName = \"/Users/rchowdary/rgs/src/secondpage/Nav.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./Nav.css\";\nimport Dropdown from \"../components/Dropdown/Dropdown\";\nimport Axios from \"axios\";\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchUrlsBasedonCatId = categoryId => {\n      Axios.post(\"/api/urls/createUrl/${categoryId}\").then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      urllist: []\n    };\n  }\n\n  render() {\n    const params = this.props.match.params;\n\n    componentDidMount = () => {\n      fetchUrlsBasedonCatId(params.categoryId);\n    };\n\n    return React.createElement(\"form\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"List of URLs\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      fetchurls: true,\n      fetchUrlsBasedonCatId: fetchUrlsBasedonCatId,\n      categoryId: params.catId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(Nav);","map":{"version":3,"sources":["/Users/rchowdary/rgs/src/secondpage/Nav.js"],"names":["React","Component","withRouter","Dropdown","Axios","Nav","constructor","props","fetchUrlsBasedonCatId","categoryId","post","then","response","console","log","catch","error","state","urllist","render","params","match","componentDidMount","catId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,qBAPmB,GAOKC,UAAU,IAAI;AACpCL,MAAAA,KAAK,CAACM,IAAN,CAAW,mCAAX,EACGC,IADH,CACQC,QAAQ,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,OAHH,EAIGG,KAJH,CAISC,KAAK,IAAI;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,OANH;AAOD,KAfkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAWDC,EAAAA,MAAM,GAAG;AAAA,UAEIC,MAFJ,GAGH,KAAKb,KAHF,CAELc,KAFK,CAEID,MAFJ;;AAKPE,IAAAA,iBAAiB,GAAG,MAAM;AACxBd,MAAAA,qBAAqB,CAACY,MAAM,CAACX,UAAR,CAArB;AACD,KAFD;;AAIA,WACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,SAAS,EAAE,IADb;AAEE,MAAA,qBAAqB,EAAED,qBAFzB;AAGE,MAAA,UAAU,EAAEY,MAAM,CAACG,KAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF;AAcD;;AAxCyB;;AA0C5B,eAAerB,UAAU,CAACG,GAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./Nav.css\";\nimport Dropdown from \"../components/Dropdown/Dropdown\";\nimport Axios from \"axios\";\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      urllist: []\n    };\n  }\n\n  fetchUrlsBasedonCatId = categoryId => {\n    Axios.post(\"/api/urls/createUrl/${categoryId}\")\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n  render() {\n    const {\n      match: { params }\n    } = this.props;\n\n    componentDidMount = () => {\n      fetchUrlsBasedonCatId(params.categoryId);\n    };\n\n    return (\n      <form className=\"form\">\n        <div>\n          <h1>List of URLs</h1>\n        </div>\n        <div>\n          <Dropdown\n            fetchurls={true}\n            fetchUrlsBasedonCatId={fetchUrlsBasedonCatId}\n            categoryId={params.catId}\n          />\n        </div>\n      </form>\n    );\n  }\n}\nexport default withRouter(Nav);\n"]},"metadata":{},"sourceType":"module"}