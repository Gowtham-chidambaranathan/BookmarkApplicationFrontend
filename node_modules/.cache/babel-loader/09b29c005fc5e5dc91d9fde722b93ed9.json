{"ast":null,"code":"var _jsxFileName = \"/Users/rchowdary/rgs/src/Category/components/CreateCategory.js\";\nimport React from \"react\";\nimport TextArea from \"../../common/Textarea\";\nimport TextField from \"../../common/TextField\";\nimport { Button } from \"react-bootstrap\";\nimport { CategoryFormStyled } from \"./Category.styled\";\nimport Axios from \"axios\";\nexport default class CreateCategory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.validate = () => {\n      let catError = \"\";\n      let descError = \"\";\n\n      if (!this.state.categoryDesc.length) {\n        descError = \"Description cannot be blank!\";\n      }\n\n      if (!this.state.categoryName.length) {\n        catError = \"Category cannot be blank!\";\n      }\n\n      if (catError || descError) {\n        this.setState({\n          catError,\n          descError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        Axios.post(\"/api/categories/\", this.state).then(response => {\n          console.log(response);\n        }).catch(error => {\n          console.log(error);\n        });\n        console.log(this.state);\n      } else {\n        alert(\"Cannot be created\");\n      }\n    };\n\n    this.state = {\n      categoryName: \"\",\n      categoryDesc: \"\",\n      catError: \"\",\n      descError: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(CategoryFormStyled, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onChange: this.changeHandler,\n      label: \"Category Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      placeholder: \"Enter the description\",\n      handleChange: e => {\n        this.setState({\n          categoryDesc: e.target.value\n        });\n      },\n      label: \"Category Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/rchowdary/rgs/src/Category/components/CreateCategory.js"],"names":["React","TextArea","TextField","Button","CategoryFormStyled","Axios","CreateCategory","Component","constructor","props","changeHandler","e","setState","target","name","value","validate","catError","descError","state","categoryDesc","length","categoryName","submitHandler","preventDefault","isValid","post","then","response","console","log","catch","error","alert","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,cAAN,SAA6BN,KAAK,CAACO,SAAnC,CAA6C;AAC1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,aATmB,GASHC,CAAC,IAAI;AACnB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACD,KAXkB;;AAAA,SAYnBC,QAZmB,GAYR,MAAM;AACf,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,UAAI,CAAC,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,MAA7B,EAAqC;AACnCH,QAAAA,SAAS,GAAG,8BAAZ;AACD;;AACD,UAAI,CAAC,KAAKC,KAAL,CAAWG,YAAX,CAAwBD,MAA7B,EAAqC;AACnCJ,QAAAA,QAAQ,GAAG,2BAAX;AACD;;AACD,UAAIA,QAAQ,IAAIC,SAAhB,EAA2B;AACzB,aAAKN,QAAL,CAAc;AAAEK,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,SAAd;AACA,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KA1BkB;;AAAA,SA2BnBK,aA3BmB,GA2BHZ,CAAC,IAAI;AACnBA,MAAAA,CAAC,CAACa,cAAF;AACA,YAAMC,OAAO,GAAG,KAAKT,QAAL,EAAhB;;AACA,UAAIS,OAAJ,EAAa;AACXpB,QAAAA,KAAK,CAACqB,IAAN,CAAW,kBAAX,EAA+B,KAAKP,KAApC,EACGQ,IADH,CACQC,QAAQ,IAAI;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,SAHH,EAIGG,KAJH,CAISC,KAAK,IAAI;AACdH,UAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,SANH;AAOAH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACD,OATD,MASO;AACLc,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;AACF,KA1CkB;;AAEjB,SAAKd,KAAL,GAAa;AACXG,MAAAA,YAAY,EAAE,EADH;AAEXF,MAAAA,YAAY,EAAE,EAFH;AAGXH,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,SAAS,EAAE;AAJA,KAAb;AAMD;;AAmCDgB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKX,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKb,aAA1B;AAAyC,MAAA,KAAK,EAAC,eAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,QAAD;AACE,MAAA,WAAW,EAAC,uBADd;AAEE,MAAA,YAAY,EAAEC,CAAC,IAAI;AACjB,aAAKC,QAAL,CAAc;AAAEQ,UAAAA,YAAY,EAAET,CAAC,CAACE,MAAF,CAASE;AAAzB,SAAd;AACD,OAJH;AAKE,MAAA,KAAK,EAAC,sBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAUE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,CADF,CADF;AAgBD;;AA7DyD","sourcesContent":["import React from \"react\";\nimport TextArea from \"../../common/Textarea\";\nimport TextField from \"../../common/TextField\";\nimport { Button } from \"react-bootstrap\";\nimport { CategoryFormStyled } from \"./Category.styled\";\nimport Axios from \"axios\";\n\nexport default class CreateCategory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryName: \"\",\n      categoryDesc: \"\",\n      catError: \"\",\n      descError: \"\"\n    };\n  }\n  changeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  validate = () => {\n    let catError = \"\";\n    let descError = \"\";\n    if (!this.state.categoryDesc.length) {\n      descError = \"Description cannot be blank!\";\n    }\n    if (!this.state.categoryName.length) {\n      catError = \"Category cannot be blank!\";\n    }\n    if (catError || descError) {\n      this.setState({ catError, descError });\n      return false;\n    }\n    return true;\n  };\n  submitHandler = e => {\n    e.preventDefault();\n    const isValid = this.validate();\n    if (isValid) {\n      Axios.post(\"/api/categories/\", this.state)\n        .then(response => {\n          console.log(response);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      console.log(this.state);\n    } else {\n      alert(\"Cannot be created\");\n    }\n  };\n  render() {\n    return (\n      <CategoryFormStyled>\n        <form onSubmit={this.submitHandler}>\n          <TextField onChange={this.changeHandler} label=\"Category Name\" />\n          <TextArea\n            placeholder=\"Enter the description\"\n            handleChange={e => {\n              this.setState({ categoryDesc: e.target.value });\n            }}\n            label=\"Category Description\"\n          />\n\n          <Button type=\"submit\">Submit</Button>\n        </form>\n      </CategoryFormStyled>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}