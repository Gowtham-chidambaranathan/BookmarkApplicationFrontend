{"ast":null,"code":"var _jsxFileName = \"/Users/rchowdary/rgs/src/secondpage/About.js\";\nimport React, { Component } from \"react\";\nimport \"./About.css\";\nimport axios from \"axios\";\n\nclass About extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.validate = () => {\n      let urlError = \"\";\n      let descError = \"\";\n\n      if (!this.state.categoryDescription.length) {\n        descError = \"Description cannot be blank!\";\n      }\n\n      if (!this.state.categoryName.length) {\n        urlError = \"Category cannot be blank!\";\n      }\n\n      if (urlError || descError) {\n        this.setState({\n          urlError,\n          descError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        axios.post(\"/api/category/create\", this.state).then(response => {\n          console.log(response);\n        }).catch(error => {\n          console.log(error);\n        });\n        console.log(this.state);\n      } else {\n        alert(\"Cannot be created\");\n      }\n    };\n\n    this.state = {\n      categoryName: \"\",\n      categoryDescription: \"\",\n      urlError: \"\",\n      descError: \"\"\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          categoryName = _this$state.categoryName,\n          categoryDescription = _this$state.categoryDescription;\n    return React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      label: \"Name\",\n      input: \"text\",\n      placeholder: \"Enter the category name.. \",\n      className: \"textarea1\",\n      name: \"categoryName\",\n      value: categoryName,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), this.state.urlError ? React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.urlError) : null), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      label: \"Description\",\n      input: \"text\",\n      placeholder: \"Enter the category description..\",\n      className: \"textarea2\",\n      name: \"categoryDescription\",\n      value: categoryDescription,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), this.state.descError ? React.createElement(\"div\", {\n      className: \"error1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.descError) : null), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Create\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/rchowdary/rgs/src/secondpage/About.js"],"names":["React","Component","axios","About","constructor","props","changeHandler","e","setState","target","name","value","validate","urlError","descError","state","categoryDescription","length","categoryName","submitHandler","preventDefault","isValid","post","then","response","console","log","catch","error","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./About.css\";\nimport axios from \"axios\";\n\nclass About extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categoryName: \"\",\n      categoryDescription: \"\",\n      urlError: \"\",\n      descError: \"\"\n    };\n  }\n  changeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  validate = () => {\n    let urlError = \"\";\n    let descError = \"\";\n    if (!this.state.categoryDescription.length) {\n      descError = \"Description cannot be blank!\";\n    }\n    if (!this.state.categoryName.length) {\n      urlError = \"Category cannot be blank!\";\n    }\n    if (urlError || descError) {\n      this.setState({ urlError, descError });\n      return false;\n    }\n    return true;\n  };\n  submitHandler = e => {\n    e.preventDefault();\n    const isValid = this.validate();\n    if (isValid) {\n      axios\n        .post(\"/api/category/create\", this.state)\n        .then(response => {\n          console.log(response);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      console.log(this.state);\n    } else {\n      alert(\"Cannot be created\");\n    }\n  };\n  render() {\n    const { categoryName, categoryDescription } = this.state;\n    return (\n      <form onSubmit={this.submitHandler}>\n        <div>\n          <textarea\n            label=\"Name\"\n            input=\"text\"\n            placeholder=\"Enter the category name.. \"\n            className=\"textarea1\"\n            name=\"categoryName\"\n            value={categoryName}\n            onChange={this.changeHandler}\n          />\n          {this.state.urlError ? (\n            <div className=\"error\">{this.state.urlError}</div>\n          ) : null}\n        </div>\n        <div>\n          <textarea\n            label=\"Description\"\n            input=\"text\"\n            placeholder=\"Enter the category description..\"\n            className=\"textarea2\"\n            name=\"categoryDescription\"\n            value={categoryDescription}\n            onChange={this.changeHandler}\n          />\n          {this.state.descError ? (\n            <div className=\"error1\">{this.state.descError}</div>\n          ) : null}\n        </div>\n        <div>\n          <button className=\"button\">Create</button>\n        </div>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}