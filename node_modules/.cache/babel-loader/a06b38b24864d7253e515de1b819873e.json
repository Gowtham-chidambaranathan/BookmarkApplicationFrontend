{"ast":null,"code":"var _jsxFileName = \"/Users/rchowdary/rgs/src/components/Dropdown/Dropdown.js\";\nimport React, { Component } from \"react\";\n\nclass Dropdown extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showMenu: false\n    };\n    this.showMenu = this.showMenu.bind(this);\n    this.closeMenu = this.closeMenu.bind(this);\n  }\n\n  showMenu(event) {\n    event.preventDefault();\n    this.setState({\n      showMenu: true\n    }, () => {\n      document.addEventListener(\"click\", this.closeMenu);\n    });\n  }\n\n  closeMenu(event) {\n    if (!this.dropdownMenu.contains(event.target)) {\n      this.setState({\n        showMenu: false\n      }, () => {\n        document.removeEventListener(\"click\", this.closeMenu);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.showMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Show menu\"), this.state.showMenu ? React.createElement(\"div\", {\n      className: \"menu\",\n      ref: element => {\n        this.dropdownMenu = element;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \" cat 1 \"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" cat 2 \"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" cat n \")) : null);\n  }\n\n}\n\nexport default Dropdown;","map":{"version":3,"sources":["/Users/rchowdary/rgs/src/components/Dropdown/Dropdown.js"],"names":["React","Component","Dropdown","constructor","state","showMenu","bind","closeMenu","event","preventDefault","setState","document","addEventListener","dropdownMenu","contains","target","removeEventListener","render","element"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC/BE,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAIA,SAAKA,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDD,EAAAA,QAAQ,CAACG,KAAD,EAAQ;AACdA,IAAAA,KAAK,CAACC,cAAN;AAEA,SAAKC,QAAL,CAAc;AAAEL,MAAAA,QAAQ,EAAE;AAAZ,KAAd,EAAkC,MAAM;AACtCM,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKL,SAAxC;AACD,KAFD;AAGD;;AAEDA,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACf,QAAI,CAAC,KAAKK,YAAL,CAAkBC,QAAlB,CAA2BN,KAAK,CAACO,MAAjC,CAAL,EAA+C;AAC7C,WAAKL,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAE;AAAZ,OAAd,EAAmC,MAAM;AACvCM,QAAAA,QAAQ,CAACK,mBAAT,CAA6B,OAA7B,EAAsC,KAAKT,SAA3C;AACD,OAFD;AAGD;AACF;;AAEDU,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKZ,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAGG,KAAKD,KAAL,CAAWC,QAAX,GACC;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,GAAG,EAAEa,OAAO,IAAI;AACd,aAAKL,YAAL,GAAoBK,OAApB;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,CADD,GAWG,IAdN,CADF;AAkBD;;AA/C8B;;AAiDjC,eAAehB,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Dropdown extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      showMenu: false\n    };\n\n    this.showMenu = this.showMenu.bind(this);\n    this.closeMenu = this.closeMenu.bind(this);\n  }\n\n  showMenu(event) {\n    event.preventDefault();\n\n    this.setState({ showMenu: true }, () => {\n      document.addEventListener(\"click\", this.closeMenu);\n    });\n  }\n\n  closeMenu(event) {\n    if (!this.dropdownMenu.contains(event.target)) {\n      this.setState({ showMenu: false }, () => {\n        document.removeEventListener(\"click\", this.closeMenu);\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.showMenu}>Show menu</button>\n\n        {this.state.showMenu ? (\n          <div\n            className=\"menu\"\n            ref={element => {\n              this.dropdownMenu = element;\n            }}\n          >\n            <button> cat 1 </button>\n            <button> cat 2 </button>\n            <button> cat n </button>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}